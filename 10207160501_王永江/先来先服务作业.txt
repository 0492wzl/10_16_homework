#include<iostream>
using namespace std;
#define M 100
int i，j;
int process_number;
int arrival_time[M];
int services_time[M];
int completion_time[M];
int turn_around_time[M];
int average_turn_around_time[M];
double add1， add2，add3，add4;
double average_add[M]， average_add1[M];
double right_turn_around_time[M];
int a[M]， b[M], c[M],d[M];
int exchange;
void FCFS();
void SJF();
void FCFS()
{
  cout<<"----先来先服务调度算法(FCFS)----"<<endl;
  cout<<"请输入进程数："<<endl;
  cin>>process_number;
  cout<<"请输入进程到达时间："<<endl;
  for(i=0;i<process_number;i++)
    {
      cin>>arrival_time[i];
     }
  cout<<"请输入服务时间："<<endl;
  for(i=0;i<process_number;i++)
 {
   cin>>services_time[i];
  }
  cout<<"完成时间是："<<endl;
  for(i=0;i<process_number;i++)
  {   
  completion_time[i]=services_time[i];
  }
  for(i=0;i<process_number;i++)//完成时间
  {   
  completion_time[i+1]=completion_time[i]+completion_time[i+1];
   }
  for(i=0;i<process_number;i++)
  {
   cout<<completion_time[i]<<" ";
   }
	cout<<endl;
	cout<<"周转时间是："<<endl;
	for(i=0;i<process_number;i++)//周转时间
	{
		turn_around_time[i]=completion_time[i]-arrival_time[i];
	}
	for(i=0;i<process_number;i++)
	{
		cout<<turn_around_time[i]<<" ";
	}
	cout<<endl;
	cout<<"平均周转时间："<<endl;
	for(i=0;i<process_number;i++)
	{
		average_turn_around_time[i]=turn_around_time[i];

	}
	for(i=0;i<process_number;i++)
	{
		average_turn_around_time[i+1]=average_turn_around_time[i]+average_turn_around_time[i+1];
		add1=average_turn_around_time[i+1];
	}
	cout<<add1/double(process_number)<<endl;//平均周转时间
	cout<<"带权周转时间："<<endl;
	for(i=0;i<process_number;i++)
	{
		right_turn_around_time[i]=double(turn_around_time[i])/double(services_time[i]);
		cout<<right_turn_around_time[i]<<" ";//带权周转时间
	}
	cout<<endl;
	cout<<"平均带权周转时间："<<endl;
	for(i=0;i<process_number;i++)
	{
		average_add[i]=right_turn_around_time[i];
	}
	for(i=0;i<process_number;i++)
	{
		average_add[i+1]=average_add[i]+average_add[i+1];
		add2=average_add[i+1];
	}
	cout<<add2/double(process_number)<<endl;//平均带权周转时间
	cout<<"-.-.-.-.-.-.-.-.-.-.-.-."<<endl;
	cout<<endl;
	cout<<endl;
}
void SJF()
{
	cout<<"----短作业调度优先算法(SJF)----"<<endl;
	cout<<"请输入进程数："<<endl;
	cin>>process_number;
	cout<<"请输入进程到达时间："<<endl;
	for(i=0;i<process_number;i++)
	{
		cin>>arrival_time[i];
	}
	cout<<"请输入服务时间："<<endl;
	for(i=0;i<process_number;i++)
	{
		cin>>services_time[i];
	}
	for(i=0;i<process_number;i++)
	{
		a[i]=services_time[i];//把服务时间赋值给a数组
	}
	for(i=1;i<process_number-1;i++)//实现第1位按从小到达排序
	{
		for(j=i+1;j<process_number;j++)
		{
			if(a[i]>a[j])
			{
				exchange=a[i];
			    a[i]=a[j];
			    a[j]=exchange;
			}
		}
	}
	for(i=1;i<process_number;i++)//获得数组下标
	{
		for(j=1;j<process_number;j++)
		{
			if(a[i]==services_time[j])
			{
				b[i]=j;
				break;
			}
		}
	}
	b[0]=services_time[0];
	for(i=1;i<process_number;i++)
	{
		a[i]=a[i-1]+a[i];
		c[b[i]]=a[i];//完成时间
	}
	c[0]=4;
	cout<<"完成时间是："<<endl;;
	for(i=0;i<process_number;i++)
	{
		cout<<c[i]<<" ";
	}
	cout<<endl;

	cout<<"周转时间是："<<endl;
	for(i=0;i<process_number;i++)
	{
		turn_around_time[i]=c[i]-arrival_time[i];
	}
	for(i=0;i<process_number;i++)
	{
		cout<<turn_around_time[i]<<" ";//周转时间
	}
	cout<<endl;
	for(i=0;i<process_number;i++)
	{
		d[i]=turn_around_time[i];
	}
	cout<<"平均周转时间："<<endl;
	for(i=0;i<process_number-1;i++)
	{
		turn_around_time[i+1]=turn_around_time[i]+turn_around_time[i+1];
		add3=turn_around_time[i+1];
	}
	cout<<add3/double(process_number)<<endl;//平均周转时间
	cout<<"带权周转时间："<<endl;
	for(i=0;i<process_number;i++)
	{
		right_turn_around_time[i]=float(d[i])/float(services_time[i]);
		cout<<right_turn_around_time[i]<<" ";//带权周转时间
	}
	cout<<endl;
	cout<<"平均带权周转时间："<<endl;
	for(i=0;i<process_number;i++)
	{
		average_add1[i]=right_turn_around_time[i];
	}
	for(i=0;i<process_number-1;i++)
	{
		average_add1[i+1]=average_add1[i]+average_add1[i+1];
		add4=average_add1[i+1];
	}
	cout<<add4/double(process_number)<<endl;//平均带权周转时间
}
void main()
{
	char flag='Y';
	char n;
	cout<<"-----调度算法FCFS && SJF------"<<endl;;
	while(flag=='Y'||flag=='y')
	{ 
		cout<<endl;
		cout<<"1、FCFS arithmetic."<<endl;
		cout<<"2、SJF arithmetic."<<endl;
	    cout<<"请您选择arithmetic的序号："<<endl;
		cin>>n;
	    switch(n)
		{
		case'1':
			FCFS();
		    break;
	    case'2':
		    SJF();
			break;
		default:
			cout<<endl;
			cout<<"您输出有误!"<<endl;
			break;
		}
		cout<<endl;
		cout<<"是否继续调度算法FCFS && SJF，按'Y'or'y'钮继续,按照'N'or'n'键退出"<<endl;
		cin>>flag;
	}
}




输出页面显示：（我假设进程数为3）
1、FCFS arithmetic.
2、SJF arithmetic.
请选择arithmetic的序号：
1
-----先来先服务调度算法<FCFS>----
请输入进程数：
3
请输入进程到达时间：
3
7
9
请输入服务时间：
3
12
19
完成时间是：
3 15 34
周转时间是：0 8 25
平均周转时间：11
带权周转时间：0 0.666667 1.31579









